---
openapi: 3.0.2
info:
  title: Cumulus REST API
  version: 0.8.0
servers:
  - url: https://cumulus-api.rsgis.dev
    description: Stable API
  - url: https://develop-cumulus-api.rsgis.dev
    description: Development API
components:
  schemas:
    acquirable:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
    acquirables:
      type: array
      items:
        "$ref": "#/components/schemas/acquirable"
    acquirablefile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        datetime:
          type: string
          format: date-time
        file:
          type: string
        create_date:
          type: string
          format: date-time
        process_date:
          type: string
          format: date-time
        acquirable_id:
          type: string
          format: uuid
    acquirablefiles:
      type: array
      items:
        "$ref": "#/components/schemas/acquirablefile"
    empty_object:
      type: object
    download:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sub:
          type: string
          format: uuid
        datetime_start:
          type: string
          format: date-time
        datetime_end:
          type: string
          format: date-time
        watershed_id:
          type: string
          format: uuid
        product_id:
          type: array
          items:
            type: string
            format: uuid
        status_id:
          type: string
          format: uuid
        status:
          type: string
        progress:
          type: integer
        file:
          type: string
        processing_start:
          type: string
          format: date-time
        processing_end:
          type: string
          format: date-time
        watershed_slug:
          type: string
        watershed_name:
          type: string
    downloadRequest:
      type: object
      properties:
        datetime_start:
          type: string
          format: date-time
        datetime_end:
          type: integer
          format: date-time
        watershed_id:
          type: string
        product_id:
          type: array
          items:
            type: string
            format: uuid
    product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
        name:
          type: string
        tags:
          type: array
          items:
            type: string
            format: uuid
        temporal_resolution:
          type: integer
        temporal_duration:
          type: integer
        dss_fpart:
          type: string
        parameter_id:
          type: string
          format: uuid
        parameter:
          type: string
        unit_id:
          type: string
          format: uuid
        unit:
          type: string
        description:
          type: string
    products:
      type: array
      items:
        "$ref": "#/components/schemas/product"
    productfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        datetime:
          type: string
          format: date-time
        file:
          type: string
    productfiles:
      type: array
      items:
        "$ref": "#/components/schemas/productfile"
    tag:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        color:
          type: string
    tags:
      type: array
      items:
        "$ref": "#/components/schemas/tag"
  examples:
    createProductRequest:
      value:
        name: NOHRSC Snodas SWE
        temporal_resolution: 86400
        temporal_duration: 0
        dss_fpart: SNODAS
        parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
        unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
        description: Snow Water Equivalent dataset produced by NOHRSC
    createProductResponse:
      value:
        id: 757c809c-dda0-412b-9831-cb9bd0f62d1d
        slug: nohrsc-snodas-swe
        tags: []
        name: NOHRSC Snodas SWE
        temporal_resolution: 86400
        temporal_duration: 0
        dss_fpart: SNODAS
        parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
        parameter: SWE
        unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
        unit: MM
        description: Snow Water Equivalent dataset produced by NOHRSC
    productExample:
      value:
        id: 757c809c-dda0-412b-9831-cb9bd0f62d1d
        slug: nohrsc-snodas-swe
        tags:
          - 57bda84f-ecec-4cd7-b3b1-c0c36f838a05
        name: NOHRSC Snodas SWE
        temporal_resolution: 86400
        temporal_duration: 0
        dss_fpart: SNODAS
        parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
        parameter: SWE
        unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
        unit: MM
        description: Snow Water Equivalent dataset produced by NOHRSC
    productfileExample:
      value:
        id: 951d8838-75ac-4250-ad48-4cdb249484b2
        datetime: '2021-03-21T01:00:00-05:00'
        file: cumulus/nohrsc_snodas_swe/zz_ssmv11034tS__T0001TTNATS2021032105HP001_cloud_optimized.tif
x-tagGroups:
  - name: Products
    tags:
      - Acquirables
      - Products
      - Tags
  - name: Downloads
    tags:
      - Downloads
      - My Downloads
  - name: Watersheds
    tags:
      - Watersheds
      - My Watersheds
      - Role Management
  - name: Account Management
    tags:
      - Accounts
paths:
  "/acquirables":
    get:
      tags:
        - Acquirables
      description: List Acquirables
      responses:
        '200':
          description: Array of Acquirables
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/acquirables"
  "/acquirables/{acquirable_id}/files?after={after}&before={before}":
    get:
      tags:
        - Acquirables
      summary: List Acquirable Files
      description: List Acquirable Files for a single Acquirable within a specified
        date range
      parameters:
        - name: acquirable_id
          in: path
          required: true
          description: The ID of the acquirable
          schema:
            type: string
            format: uuid
        - name: after
          in: query
          schema:
            type: string
            format: date-time
        - name: before
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of Acquirable Files
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/acquirablefiles"
  "/acquirablefiles":
    post:
      tags:
        - Acquirables
      summary: Create Acquirable File
      description: Create database record of an acquirablefile
      responses:
        '201':
          description: Acquirable File
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/acquirablefile"
  "/products":
    get:
      tags:
        - Products
      description: List Products
      responses:
        '200':
          description: Array of Products
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/products"
    post:
      tags:
        - Products
      description: Create Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                temporal_resolution:
                  type: integer
                temporal_duration:
                  type: integer
                dss_fpart:
                  type: string
                parameter_id:
                  type: string
                  format: uuid
                unit_id:
                  type: string
                  format: uuid
            example:
              value:
                name: NOHRSC Snodas SWE
                temporal_resolution: 86400
                temporal_duration: 0
                dss_fpart: SNODAS
                parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
                unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
                description: Snow Water Equivalent dataset produced by NOHRSC
      responses:
        '201':
          description: Product Object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/product"
              example:
                value:
                  id: 757c809c-dda0-412b-9831-cb9bd0f62d1d
                  slug: nohrsc-snodas-swe
                  tags: []
                  name: NOHRSC Snodas SWE
                  temporal_resolution: 86400
                  temporal_duration: 0
                  dss_fpart: SNODAS
                  parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
                  parameter: SWE
                  unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
                  unit: MM
                  description: Snow Water Equivalent dataset produced by NOHRSC
  "/products/{product_id}":
    parameters:
      - name: product_id
        in: path
        required: true
        description: The ID of the product to update or delete
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Products
      description: Get Product
      responses:
        '200':
          description: A Single Product
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/product"
              example:
                value:
                  id: 757c809c-dda0-412b-9831-cb9bd0f62d1d
                  slug: nohrsc-snodas-swe
                  tags:
                    - 57bda84f-ecec-4cd7-b3b1-c0c36f838a05
                  name: NOHRSC Snodas SWE
                  temporal_resolution: 86400
                  temporal_duration: 0
                  dss_fpart: SNODAS
                  parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
                  parameter: SWE
                  unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
                  unit: MM
                  description: Snow Water Equivalent dataset produced by NOHRSC
    put:
      tags:
        - Products
      description: Update Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/product"
      responses:
        '200':
          description: A Single Product
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/product"
              example:
                value:
                  id: 757c809c-dda0-412b-9831-cb9bd0f62d1d
                  slug: nohrsc-snodas-swe
                  tags:
                    - 57bda84f-ecec-4cd7-b3b1-c0c36f838a05
                  name: NOHRSC Snodas SWE
                  temporal_resolution: 86400
                  temporal_duration: 0
                  dss_fpart: SNODAS
                  parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
                  parameter: SWE
                  unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
                  unit: MM
                  description: Snow Water Equivalent dataset produced by NOHRSC
    delete:
      tags:
        - Products
      description: Delete Product
      responses:
        '200':
          description: Empty Object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_object"
  "/products/{product_id}/undelete":
    parameters:
      - name: product_id
        in: path
        required: true
        description: ID of Product to Undelete
        schema:
          type: string
          format: uuid
    post:
      tags:
        - Products
      description: Undo Product Delete
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/product"
              example:
                value:
                  id: 757c809c-dda0-412b-9831-cb9bd0f62d1d
                  slug: nohrsc-snodas-swe
                  tags:
                    - 57bda84f-ecec-4cd7-b3b1-c0c36f838a05
                  name: NOHRSC Snodas SWE
                  temporal_resolution: 86400
                  temporal_duration: 0
                  dss_fpart: SNODAS
                  parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
                  parameter: SWE
                  unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
                  unit: MM
                  description: Snow Water Equivalent dataset produced by NOHRSC
  "/products/{product_id}/files?after={after}&before={before}":
    get:
      tags:
        - Products
      summary: List Productfiles
      description: List Productfiles for a single product within a specified date
        range
      parameters:
        - name: product_id
          in: path
          required: true
          description: The ID of the product
          schema:
            type: string
            format: uuid
        - name: after
          in: query
          schema:
            type: string
            format: date-time
        - name: before
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of Productfiles
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/productfiles"
  "/products/{product_id}/availability":
    get:
      tags:
        - Products
      summary: Get Product Availability
      description: Get file count by day for a single product
      parameters:
        - name: product_id
          in: path
          required: true
          description: The ID of the product
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product Availability
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_id:
                    type: string
                    format: uuid
                  date_counts:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date-time
                        count:
                          type: integer
  "/tags":
    get:
      tags:
        - Tags
      description: List All Tags
      responses:
        '200':
          description: Array of Tags
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tags"
    post:
      tags:
        - Tags
      description: Create Tag
      responses:
        '201':
          description: A Single Tag
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tag"
  "/tags/{tag_id}":
    parameters:
      - name: tag_id
        in: path
        required: true
        description: The ID of the tag to update or delete
        schema:
          type: string
          format: uuid
    put:
      tags:
        - Tags
      description: Update Tag
      responses:
        '200':
          description: A Single Tag
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tag"
    delete:
      tags:
        - Tags
      description: Delete Tag
      responses:
        '200':
          description: Empty Object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_object"
  "/products/{product_id}/tags/{tag_id}":
    post:
      tags:
        - Tags
      summary: Tag Product
      description: Add a tag to a product
      parameters:
        - name: product_id
          in: path
          required: true
          description: ID of the product to be tagged
          schema:
            type: string
            format: uuid
        - name: tag_id
          in: path
          required: true
          description: Tag ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product Tagged Successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/product"
              example:
                value:
                  id: 757c809c-dda0-412b-9831-cb9bd0f62d1d
                  slug: nohrsc-snodas-swe
                  tags:
                    - 57bda84f-ecec-4cd7-b3b1-c0c36f838a05
                  name: NOHRSC Snodas SWE
                  temporal_resolution: 86400
                  temporal_duration: 0
                  dss_fpart: SNODAS
                  parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
                  parameter: SWE
                  unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
                  unit: MM
                  description: Snow Water Equivalent dataset produced by NOHRSC
    delete:
      tags:
        - Tags
      summary: Untag Product
      description: Remove a tag from a product
      parameters:
        - name: product_id
          in: path
          required: true
          description: Product ID
          schema:
            type: string
            format: uuid
        - name: tag_id
          in: path
          required: true
          description: ID of Tag to be Removed
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product Tag Removed Successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/product"
              example:
                value:
                  id: 757c809c-dda0-412b-9831-cb9bd0f62d1d
                  slug: nohrsc-snodas-swe
                  tags:
                    - 57bda84f-ecec-4cd7-b3b1-c0c36f838a05
                  name: NOHRSC Snodas SWE
                  temporal_resolution: 86400
                  temporal_duration: 0
                  dss_fpart: SNODAS
                  parameter_id: 683a55b9-4a94-46b5-9f47-26e66f3037a8
                  parameter: SWE
                  unit_id: e245d39f-3209-4e58-bfb7-4eae94b3f8dd
                  unit: MM
                  description: Snow Water Equivalent dataset produced by NOHRSC
  "/downloads":
    post:
      tags:
        - Downloads
      summary: Anonymous Download
      description: Create an anonymous download; Currently supports DSS output format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                datetime_start:
                  type: string
                  format: date-time
                datetime_end:
                  type: integer
                  format: date-time
                watershed_id:
                  type: string
                product_id:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        '201':
          description: Download Object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/download"
  "/downloads/{download_id}":
    parameters:
      - name: download_id
        in: path
        required: true
        description: Download ID
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Downloads
      description: Get Download
      responses:
        '200':
          description: Get A Single Download
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/download"
    put:
      tags:
        - Downloads
      description: Update Download
      responses:
        '200':
          description: A Single Download
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/download"
  "/downloads/{download_id}/packager_request":
    parameters:
      - name: download_id
        in: path
        required: true
        description: Download ID
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Downloads
      summary: Download Info for Packager
      description: Returns all information required by packager service to create
        a DSS File to fulfill download request
      responses:
        '200':
          description: Packager Download Info
          content:
            application/json:
              schema:
                type: object
  "/my_downloads":
    post:
      tags:
        - My Downloads
      summary: Authenticated Download
      description: Create an authenticated download; Currently supports DSS output
        format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/downloadRequest"
      responses:
        '201':
          description: Download Object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/download"
    get:
      tags:
        - My Downloads
      summary: List My Downloads
      description: Create a download associated with logged-in user's account
      responses:
        '200':
          description: List of Downloads, All Belong to Logged-In User
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/download"
  "/watersheds":
    get:
      tags:
        - Watersheds
      summary: List Watersheds
      responses:
        '200':
          description: Watershed List
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      tags:
        - Watersheds
      summary: Create Watershed
      responses:
        '201':
          description: Watershed Item
          content:
            application/json:
              schema:
                type: object
  "/watersheds/{watershed_id}":
    parameters:
      - name: watershed_id
        in: path
        required: true
        description: Watershed ID
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Watersheds
      summary: Get Watershed
      responses:
        '200':
          description: Watershed Item
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Watersheds
      summary: Update Watershed
      responses:
        '200':
          description: Watershed Item
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Watersheds
      summary: Delete Watershed
      responses:
        '200':
          description: Watershed Item
          content:
            application/json:
              schema:
                type: object
  "/watersheds/{watershed_id}/undelete":
    parameters:
      - name: watershed_id
        in: path
        required: true
        description: Watershed ID
        schema:
          type: string
          format: uuid
    post:
      tags:
        - Watersheds
      summary: Undelete Watershed
      description: Undo delete of a previously deleted watershed
      responses:
        '200':
          description: Watershed Item
          content:
            application/json:
              schema:
                type: object
  "/my_watersheds":
    get:
      tags:
        - My Watersheds
      summary: List My Watersheds
      description: List all watersheds logged-in user has "favorited"
      responses:
        '200':
          description: Watershed List
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  "/my_watersheds/{watershed_id}":
    parameters:
      - name: watershed_id
        in: path
        required: true
        description: Watershed ID
        schema:
          type: string
          format: uuid
    post:
      tags:
        - My Watersheds
      summary: My Watershed Add
      description: Add Watershed to "My Watersheds"
      responses:
        '200':
          description: Empty Object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_object"
    delete:
      tags:
        - My Watersheds
      summary: My Watershed Remove
      description: Remove Watershed from "My Watersheds"
      responses:
        '200':
          description: Empty Object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_object"
